git clone https://github.com/githubteacher/githubfordevelopers-april.git
git config --global --list
git config --global user.name "Siddheshwar Patil"
git config --global user.email "shidhupatil1149@gmail.com"
windows : git config --global core.autocrlf true
Linux : git config --global core.autocrlf input
git config --global push.default simple
Show all of the branche on remote : git branch --all
working on feature ? different users different branchs : create a separate branch on remote and checkout it locally: git checkout shidhupatil1149
git remote -v
git status

echo "staging test" >> staging.md
git status
git add staging.md
git status
git commit -m "commit staging changes to active branch"

clone : clone the repo maintaining the remote url
fork : fork someone's branch from his repo to a branch in your repository

# solve merges :
  Step 1: From your project repository, bring in the changes and test.
  git fetch origin
  git checkout -b shidhupatil1149 origin/shidhupatil1149
  git merge master

  Step 2: Merge the changes and update on GitHub.
  git checkout master
  git merge --no-ff shidhupatil1149
  git push origin master

# Try cleaning-up your local repository with: if you get any error while pull / fetch/ push
$ git gc --prune=now
    - Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance) and removing unreachable objects which may have been
   created from prior invocations of git add.
$ git remote prune origin
    - Deletes all stale remote-tracking branches under <name>. These stale branches have already been
           removed from the remote repository referenced by <name>, but are still locally available in
           "remotes/<name>".
